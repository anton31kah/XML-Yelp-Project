{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Vpc template for XMLProject",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
          "ParameterGroups": [
            {
              "Label": {
                "default": "Network Configuration"
              },
              "Parameters": [
                "VPCCIDRBlock",
                "PublicSubnet1CIDRBlock",
                "PublicSubnet2CIDRBlock"
              ]
            }
          ]
        },
        "ParameterLabels": {
          "VPCCIDRBlock": {
            "default": "Which CIDR Block to be assigned to VPC"
          },
          "PublicSubnet1CIDRBlock": {
            "default": "Which CIDR Block to be assigned to Public Subnet 1"
          },
          "PublicSubnet2CIDRBlock": {
            "default": "Which CIDR Block to be assigned to Public Subnet 2"
          }
        }
      },
      "Parameters": {
        "VPCCIDRBlock": {
          "Description": "CIDR Block for the VPC",
          "Type": "String",
          "MinLength": "9",
          "MaxLength": "18",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PublicSubnet1CIDRBlock": {
          "Description": "CIDR Block for PublicSubnet1",
          "Type": "String",
          "MinLength": "9",
          "MaxLength": "18",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PublicSubnet2CIDRBlock": {
          "Description": "CIDR Block for PublicSubnet2",
          "Type": "String",
          "MinLength": "9",
          "MaxLength": "18",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
      },
    "Resources": {
      "VPC": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": {
            "Ref": "VPCCIDRBlock"
          },
          "EnableDnsHostnames": "true",
          "EnableDnsSupport": "true",
          "InstanceTenancy": "default",
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Ref": "AWS::StackName"
              }
            },
            {
              "Key": "XMLProject",
              "Value": "VPC"
            }
          ]
        }
      },
      "InternetGateway": {
        "Type": "AWS::EC2::InternetGateway",
        "DependsOn": "VPC",
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::StackName"
                    },
                    "-InternetGateway"
                  ]
                ]
              }
            },
            {
              "Key": "XMLProject",
              "Value": "InternetGateway"
            }
          ]
        }
      },
      "AttachGateway": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "InternetGatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "PublicSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrBlock": {
            "Ref": "PublicSubnet1CIDRBlock"
          },
          "MapPublicIpOnLaunch": "true",
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::StackName"
                    },
                    "-Public-Subnet-1"
                  ]
                ]
              }
            },
            {
              "Key": "XMLProject",
              "Value": "PublicSubnet1"
            }
          ]
        }
      },
      "PublicSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": {
            "Fn::Select": [
              1,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrBlock": {
            "Ref": "PublicSubnet2CIDRBlock"
          },
          "MapPublicIpOnLaunch": "true",
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::StackName"
                    },
                    "-Public-Subnet-2"
                  ]
                ]
              }
            },
            {
              "Key": "XMLProject",
              "Value": "PublicSubnet2"
            }
          ]
        }
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::StackName"
                    },
                    "-Public-Route-Table"
                  ]
                ]
              }
            },
            {
              "Key": "XMLProject",
              "Value": "PublicRouteTable"
            }
          ]
        }
      },
      "PublicRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": "AttachGateway",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "PublicSubnet1RouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "PublicSubnet2RouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet2"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "PublicSubnet1NetworkAclAssociation": {
        "Type": "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "NetworkAclId": {
            "Fn::GetAtt": [
              "VPC",
              "DefaultNetworkAcl"
            ]
          }
        }
      },
      "PublicSubnet2NetworkAclAssociation": {
        "Type": "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet2"
          },
          "NetworkAclId": {
            "Fn::GetAtt": [
              "VPC",
              "DefaultNetworkAcl"
            ]
          }
        }
      }
    },
    "Outputs": {
      "VPCId": {
        "Description": "VPC ID",
        "Value": {
          "Ref": "VPC"
        },
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-VPCID"
          }
        }
      },
      "PublicSubnet1": {
        "Description": "The subnet ID to use for public subnet1 ",
        "Value": {
          "Ref": "PublicSubnet1"
        },
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-PublicSubnet1"
          }
        }
      },
      "PublicSubnet2": {
        "Description": "The subnet ID to use for public subnet2 ",
        "Value": {
          "Ref": "PublicSubnet2"
        },
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-PublicSubnet2"
          }
        }
      }
    }
  }